# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_OvLHQoOnKElvWIyFgn6_FgihrRNrXBH

```
**Earth quake prediction **
```
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sb

import warnings
warnings.filterwarnings('ignore')

from google.colab import files


uploaded = files.upload()

df = pd.read_csv('all_month.csv')
df.head()

df.shape

plt.subplots(figsize=(15, 5))

plt.subplot(1, 2, 1)
sb.distplot(df['Depth'])

plt.subplot(1, 2, 2)
sb.boxplot(df['Depth'])

plt.show()

fig = plt.figure(figsize=(12,10))
plt.title("All affected areas")
m.plot(x, y, "o", markersize = 2, color = 'blue')
m.drawcoastlines()
m.fillcontinents(color='coral',lake_color='aqua')
m.drawmapboundary()
m.drawcountries()
plt.show()
#visualizing world map
import pandas as pd
import folium
data = pd.read_csv('earthquake_data.csv')
world_map = folium.Map(location=[0, 0], zoom_start=2)
for index, row in data.iterrows():
 # Extract relevant data
 latitude = row['Latitude']
 longitude = row['Longitude']
 magnitude = row['Magnitude']
 location = row['Location Source']
 folium.CircleMarker(
 location=[latitude, longitude],
 radius=magnitude * 2, # Adjust the radius based on magnitude
 color='red',
 fill=True,
 fill_color='red',
 popup=f"Location: {location}<br>Latitude: 
{latitude}<br>Longitude: {longitude}<br>Magnitude: {magnitude}",
 ).add_to(world_map)
world_map.save('earthquake_map.html')
#splitting i t into training and testing sets
import pandas as pd
from sklearn.model_selection import train_test_split
data = pd.read_csv('earthquake_data.csv')
X = data[['Latitude', 'Longitude']]
y = data['Magnitude']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, 
random_state=42)
